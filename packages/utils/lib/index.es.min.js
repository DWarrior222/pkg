import axios from"axios";function __awaiter(e,a,l,c){return new(l=l||Promise)(function(n,t){function r(e){try{i(c.next(e))}catch(e){t(e)}}function o(e){try{i(c.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?n(e.value):((t=e.value)instanceof l?t:new l(function(e){e(t)})).then(r,o)}i((c=c.apply(e,a||[])).next())})}function __classPrivateFieldGet(e,t,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)}const n=1;function sum(e,t){return console.log(e,t),e+t}function getTopics(){return __awaiter(this,void 0,void 0,function*(){return yield axios.get("https://cnodejs.org/api/v1/topics")})}function replaceAll(){return"q=query+string+parameters".replaceAll("+"," ")}function promiseAny(){return __awaiter(this,void 0,void 0,function*(){return yield Promise.any([Promise.resolve(111),Promise.reject(2),Promise.resolve(3)])})}function optionalOperator(){var e;return null!==(e=[].length)&&void 0!==e?e:1}function budget(){return 1e12===Math.pow(10,12)}function testClass(){var e,t,n;class r{static callPrivateMethods(){__classPrivateFieldGet(r,e,"m",t).call(r)}static logPrivateField(){console.log(__classPrivateFieldGet(r,e,"f",n))}}e=r,t=function(){console.log("privateMethods")},Object.defineProperty(r,"staticField",{enumerable:!0,configurable:!0,writable:!0,value:"staticField"}),n={value:"privateField"},console.log(r.staticField),r.logPrivateField(),r.callPrivateMethods()}function arrayIncludes(){return[1,2,3,4].includes(5)}function gen(){return function*(){yield 1}()}console.log(n);export{arrayIncludes,budget,gen,getTopics,optionalOperator,promiseAny,replaceAll,sum,testClass};
